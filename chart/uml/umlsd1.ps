%!PS-Adobe-3.0
% Produced by xpdf/pdftops 3.02pl4
%%Creator:  XeTeX output 2010.11.19:1638
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: plain 595 842 0 () ()
%%BoundingBox: 0 0 595 842
%%Pages: 1
%%EndComments
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.02pl4 0
%%Copyright: Copyright 1996-2007 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font UPOEQR+MyriadPro-Regular
16 dict begin
/FontName /UPOEQR+MyriadPro-Regular_00 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-46 -250 1126 881] def
/PaintType 0 def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
dup 81 /c51 put
dup 82 /c52 put
dup 83 /c53 put
dup 84 /c54 put
dup 85 /c55 put
dup 86 /c56 put
dup 87 /c57 put
dup 88 /c58 put
dup 89 /c59 put
dup 90 /c5a put
91 1 255 { 1 index exch /.notdef put } for
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CBEA3C3A3CCC6455856C66A6931C91EC4B817D5C57402FEBB86E8A7B48FEE21B
6B688D319D8A34B3BDDAA4E2CF788F426C925D5CF97E70A6E0CCDC7232BCB845
1B0BB740B3F644582A653DCDF8AB75829E243045EB5B55290F557E89B4CD9EFD
9BF243AF6EF62E45EAD0E2F085C13C68B82715C02F4A3CEE4980398EC6A50662
9DA3C646389493775DFBF6EC7058F5A98BBE906469BCDF43558367200B1EAA36
E8045CD85BE75281A95B3B295C376FD2B6DAF01E61839A98D837BFBDF9FC8FA9
06859FC966FC20070A5AABF49D56715FDA5E1B2BFCCA2705D79D5A414C4DD392
0114B050C6A12924D134EEE422D08679A67C4904AF4F21775A5EA5F101E273C0
B4852B12E33185E9769D58AACABE78B7CD9A569491B919D5B606FBBE405CAF7D
BD5C645F829D8955424FD4B234FE7DDA0F0C6DFBA8ED4096BCE53BD9ABFDFAC1
3BC890D13B881B3BF55B9B8051968ABCBD8A40A36531EFD3D411CCF4B3547610
EE678BC99EEE4158FE6C3315FD1AE570B4E35C5FE1C468BBB2D9CA5901FF7123
D1D0D6A2F6359B6BCF62C98C8467322EFF64B4E8B7719CEAFA3098854D2D553C
5866CBECD4D5FD6BA0A2F1EB4F78BB19F7715E94F8A91BE0B3C31C506B441B50
B4790A0D1851A00243199D80DC29AEAE3F3D1A4CB9FD51FC4D96FB5A96A9D31C
BFFDBB77570123B583E5F0101DA9C2F010C63B612E0337F676569210EBC552E9
3D89CB03398B881194088DE79E110044F2FC45AAA28148B54770A5185E3895F4
43B238DAE71A778454F3ADDEF14F5704CE203460E3088789DD3765694FCE0AE9
C1D24159394ECFDCB2DED6405B3769BA98ADF9793BBF3494E9988ABA897480AE
D893D7BED60A3BD58F5D0D5338B7CFA94D086F30E153984DEF7B9C91F5F01B71
C3C577FEA1B644905B0FD5F6AE75E845D0AD4411DF93C15F2090D6FE4EFD3C20
4FC7DE6AC87D44A59B54CAF90E09E9E8DE687749CA1C8076E3529B6569432D59
7030FB760D8F592C7C05F002990E0CC5C68153AECBE3D55C4D85DCBA7409A8F7
19DDAFD141932C2D57F789ED53AADEFC117FA3418256875CE7417D6DEF4D9FB7
B986E61C05557A346EC589EABDB309712F797E1BF98FC59CF60DEA10B72E9501
C7342F4A678FB4E1AC0B422BEEB3B38228E1E0FED3BAF4F8531098CEE1C3FF52
DC58EE582620ED5BF036AC35F820F981107B4A1BD82CBD4ADD20DFFC5EF54C61
DB45F3A139D0853ABC666BF8040C0714BAF02A7036623F5CAB4766064795AE22
AD9CC1FC7C4E9461A4AFF6FA89E2B18061BA1F9072DD2F8EA154FE37E0F3A281
A56376DD016057D8113E54466B152FC1339B6D3041FB2921E77F4BD318737D72
8E7432045BC9CA513224773FA735ACD90B55DE4E15CDCC975E9197633CFB19DD
E37DA2E81A307B2D7A1EF892F248EEF2C0B767EC694614539FDB7D7EC7B5F485
BC2002FEAF7AC8C966F8450D719F20CA3ABB3A6AF737FC8E35ECD021CF07C548
6EF1B51FF51D1CE61AF7355B9F80FDCE06F4F254BFE6751D8DC5032A6E696959
3D1828B7506668129BA440C5DBE3C0F93FEFFDF783B34E1AD1AE5DE4F24D4640
8B47E51EE4703D51A7A6935CE168DC7671382AF9A12F2AE0073A05927B428661
7B9011931C9408918E0F6352F00E2E2F467327DC1D0045F1B2ADF5CE16EA2850
0F64A9BDF730403218C48A7481C54DD662BE5A851F32D2176B088310A9B9F150
93A5E9BFE68EF60D8431B339D3D8CD6DCBA3105F3B8B67788876447959048853
F24AE2F382AF0E1B5309255E33CE17F16261BD6A6A67E362304F814805EF939C
509C252BC84EDC8CDB3BA6178D89B10498D4F8E067999D0E112858F666D337B6
2E982A87EEF22246DFE7CAD4E55164396DF9215072C3294CEB8F60289717080E
C446A11C3F7EB709A1495523D944FFE04CCE3119465F2871FF38C52CD19694EA
ABF34CA8A09CBA8119225281B56B1311DD7376E6739A0ACCF29C59C7F0BD30F6
FAD06FE1AC16A844753606FD4847EDCA4EAECB3F28A122C4A1C9AF9F6ABD0BE7
86CBB4A57A5F42A7DF38FB663FEBA8A6B705C6750F147385E4A376B334CFD0C6
9A69E29F0F3155D85CDBF94746CAA44850C5F3CBE86768B4BB3B1B37BE3DD8ED
1DD94268FF878D64D0FE2F8D9D7B1A37BD2E0A4F7A8ED146B928068892471FC6
C420C94283CABE0ABA56BACFAC3FF5A89D8A72F22E36242EDC178BAC7A98D794
873CCE730B44E0B96C904085901F6E2CCAB407FBA37E6F8162815DDF129D8F7B
6B31C5D793104CC2E0A3607E67AF43D00E325DC3A82971D0A7DCF69650DA743B
367B8B46EB6EE3859CB56C42037EC6827FBDD3C7A26E9BDA7D20DC7DA9C22A65
0B8E11E08C6E9E32F0065B0D3B9D548D4AFF93F7BACD3F1E7CFC4760B1D5E0BC
04E76F775F30082ECB6935F7B00E877DAA85BEC7DA1298B8D86661B296739515
0B84735C1EC8EACCB769BE6A268DFBAA5BC9341FB0DDC026F1B82A4A80A4AB9E
16FE0BB9AF69037A4F2CC6EBEB54D241AC216B97C741FFA66F3B325052280408
4F48EE7B221F795F7A29A989B22F545967E92EAC66A4C259CBC06D8C47A7F7F2
9A14B6D32B6DAB8807CE81711B2CEF344488E04EFDB6A2A946E319B57EC6D3A5
3BFAA38FF21D32D4C8CC3EB413BD68BE06A11CABE6A0E1775E821AD2784B97FA
B0860D54919149DB1A11B35FB12C6D70E88B87836C7CED08767B39148553AF10
D4DCD181F1279FD81C8A9BDD9E619A81E035A86948A14807980A8E232378E4BB
4D2365AD1703D5E65442A4133A59C014F745B570FA6E6BD48F146963F9B5EA48
9491E03AA9B0CDA1196E13F808AD905275476570496FCABD95849ECB11759C76
A75ACA3EACBF98B6D7CAB0CE4C263CBF9C6D106FD7BCC941B2296BDED1ABF144
0D28DF3598AAD93F02E10304EB1D6604DC1C9C57402AA1C00C1A3FF5CC506CE7
D23F9264F9B033F8D437C7DB1DBADAA396003486C157A7CCD0058DD693DFAD0C
E55C6BBEFDE7C775421FED9170E37D7A48C71ACE47943790A2AB53D9D4312109
FBAA2A1EA73F27A2CB980216CF16434D91E389F1797B2569F4C7059EEAA828DA
7FC12DD0A8CBDAA9D525C815E5CCB74819070AE406849474D6111B9E14E46A85
12DE21D062E0E9E6D49AD0EB01188B7D3DE43C932341D7710F98E3D53AEEC5E6
C06AB2F73DF3EE89F8BFC22FB4696B0316DC4B8F1FBBAE89C52D49E018F99CA8
C36CD5088F06CAAB3D0CA39D00206FF22CFF294BCC36C6BB746E52F30DE1C6E2
C52B37026FC9CC96E782E7FF1E48C201933063D06A122990C65D03C26E2AA7E6
A19A216FEE4061B1AFDBA4A4E97CFF067A8885B674206B005400D689B2A4B31C
2B582025912B2F034B127C55FCD88D3D4E99F3067B3AC8D6F3D482C600D874BA
3BCD8F066E2F8303A971E7FE546DD44FFAED76CC81ACDD0921301DD9CD9EE4BD
F881926B7145A6EF190D7BE8675FCF33C52FAEAC72648E9047F574577168B591
44072B34F639F425D4F6D4F7A55D9A71FE2EAF997692EE03B6899920646472B7
9B47C7D30BF8237D36565A4ADDD24CC0B0D3E5EE3FF3AADD4B7D931F740C5A05
2418ADCB68702F9F8262F5F0E58DC8674F10B2A4ABDB0A052DADFD4851E41143
38196CE9569B732243E3952632D8D03880810CE04C92BEC4C6DA0E5DC027C829
67F7DAD2068B8387DDD97CA129DA50368AECEF83E039D5A7830F997014C7493A
1FB928BC7AED6545F48A57BDB0F34BBE6AE0FCA62E4E16F1FD3A39D70A4AC059
8336C90C13E94065FE402E8B1D3759241609BC4CE36AC8EDB52D8673ED409002
79749DB16D4A68A4FDE6D84E98530CDC5C755089195FF4E7E1E963D6002E3EC2
0AF79881B19037581A11AB4B7D150DB24D40E16367458A39077DAB79B74883B5
08CC332B83E52A397DEBD36223ABDE7E184DCA8DCB02D7C799F4F2164B0D9057
08061288EC6C075F900BCF0B3EAE17409980E41C8469F5E64717CBAF051A3E63
751ADAF877E056ECD7B9A52483CBAEFC5B464C688F07840072BFD1A0A701F902
FEBC0E0952FAB820AD309BFE29298A2C8A3124A42B906FFCAA45516F1B6DBC4E
DB5E8EB849867774BD1B3ED8301D51ED5BC96F923A7FAD3116AC9F2507DDE521
1C134CD47641FB1D3CA4F655E62BEAA3227BCA9638324B03C4AF7971616B9AC8
80290D3B876A38C8EF1DD28B9AC1385B4F2EA1EF254C8B4B35E2E80EF1B00FEA
2EF6A5B84374CB092FB473BD02D320AFA2CF2A0895D2F998C95EEB138A3770A2
E4D6F683DC5FDE2E00BCDB366F312F741E871C972B6B493D4194203D6A0C01E8
2174CB544A038EA9101596E6680B7FB74E270EFBF84F8241F1870659A04CCF55
29BB95EAFCA1693CC757C3A152DBC155F9ECD22AB2171A72DF7A070CC6A1AFFF
1A4D8507031A6CE2074EBEA266C7D024DE852E3DEFEC9F320E653691B77150BF
2ACD78E128A4F6DEABD5F44B6CC734700FF8B3FA96E283ED9742A099390C6042
663FAF18CBCEA8F60A54B254489E4BDE7D9A00B0F50B36AC09E94F7A85EF12AD
26B1788C7F38CDDEC1BBDA63565D9A44BE33EA94ECF3DC3827702A7FF9A73B88
616CB94863C058540E88F37EBFBE33CF80F2875436D32FC69F9CBE8BE55800FB
D27C6BB3D0BA07344500C6922C92563E5CFD44C0F7571F081EAF3615FD76C990
55EBE675206F39A603460A8D6A6D85D9DFF212E1073AD5968135CD8142CF93E7
D452A1F7105B6862D21BC19264A3555EA69473B07BD2E84EDB275504B8A73983
DC60D07D300D302376F58E5B746D83006461E01E9528E9EA969080385F34CE2A
07D87EB922574A39512EE0196D1A6F3047F8E3D2E90E128A95C800B0B6674D0E
97EC98F836D48653E0B34BE7E197109F1DD39A00675EF34126FD4F4EE190C5B4
99BE738D2698D8AAE708508DCD9E457B98B03930379E7C394BC588F2FAEE11F8
5EB34042A2B47A6C92D1496F7B600D34E47E95BFD89C57857C33F11435BD9DDB
01B2E1C96E6BB3EF3781A953F91C1B4F5AC8C34158610067356A2DDB1514273B
2103997D6A3B965B6A4B3A70473587544841BF91A763EE53E8A426B7109C6032
32BAA5415EC9DD008D8458FEC2B54DB43B50C2496B7F4D811B62F346221311D9
88846CBE2FC17DEF96CCECA28959CCDE656439C5E869B4128282125EC702010C
9A145E16645F125AC7F0839A16202DA827D2AA5097997659605CD5E0E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
16 dict begin
/FontName /UPOEQR+MyriadPro-Regular def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/UPOEQR+MyriadPro-Regular_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F23_0 /UPOEQR+MyriadPro-Regular 0 pdfMakeFont16
595 842 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
pdfStartPage
87.5 272 translate
0 0 420 298 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 419.53 297.64 re
W
q
q
[1 0 0 1 72 225.64] cm
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
3 Tr
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 86.34 -34.35] cm
q
Q
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
q
[0.3985 1.9926] 0 d
28.5461 -11.538 m
28.5461 -54.4262 l
S
Q
q
[0.3985 1.9926] 0 d
79.9689 -11.538 m
79.9689 -54.4262 l
S
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 114.89 -75.73] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 114.89 -75.73] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 166.31 -75.73] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 166.31 -75.73] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
Q
q
q
/DeviceGray {} cs
[0.85] sc
25.0262 -41.3865 7.0396 18.709 re
f
25.0262 -41.3865 7.0396 18.709 re
S
Q
q
/DeviceRGB {} cs
[1 0 0] sc
76.4491 -41.3865 7.0396 18.709 re
f
76.4491 -41.3865 7.0396 18.709 re
S
Q
Q
q
q
Q
q
/DeviceGray {} cs
[1] sc
q
q
/DeviceGray {} cs
[0.5] sc
/DeviceGray {} cs
[0] sc
[1 0 0 1 2.411 -2.411] cm
5.8685 -11.3388 45.3551 22.6775 re
f
Q
Q
q
/DeviceGray {} cs
[1] sc
5.8685 -11.3388 45.3551 22.6775 re
f
5.8685 -11.3388 45.3551 22.6775 re
S
Q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 111.84 -37.7] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 111.84 -37.7] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
111.84 -37.7 Td
/F23_0 9.963 Tf
(\000") 1 6.0974 Tj16
Q
Q
Q
Q
Q
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 114.89 -42.85] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 114.89 -42.85] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 114.89 -57.02] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 114.89 -57.02] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
q
/DeviceGray {} cs
[1] sc
q
q
/DeviceGray {} cs
[0.5] sc
/DeviceGray {} cs
[0] sc
[1 0 0 1 2.411 -2.411] cm
57.2914 -11.3388 45.3551 22.6775 re
f
Q
Q
q
/DeviceGray {} cs
[1] sc
57.2914 -11.3388 45.3551 22.6775 re
f
57.2914 -11.3388 45.3551 22.6775 re
S
Q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 163.61 -37.7] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 163.61 -37.7] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
163.61 -37.7 Td
/F23_0 9.963 Tf
(\000#) 1 5.3999 Tj16
Q
Q
Q
Q
Q
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 166.31 -42.85] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 166.31 -42.85] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 166.31 -57.02] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 166.31 -57.02] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 166.31 -71.76] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 166.31 -71.76] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 114.89 -71.76] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 114.89 -71.76] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
Q
Q
Q
Q
76.4491 -37.418 m
32.6636 -37.418 l
S
q
[-1 0 0 -1 32.6636 -37.418] cm
q
[] 0 d
1 J
0 j
-2.9068 1.7933 m
0.1993 0 l
-2.9068 -1.7933 l
S
Q
Q
q
q
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 86.34 -34.35] cm
[-1 0 0 -1 0 0] cm
3 Tr
q
Q
[1 0 0 1 0 0] Tm
0 0 Td
86.34 -34.35 Td
/F23_0 9.963 Tf
0 Tr
q
[1 0 0 1 121.8 -66.27] cm
q
Q
[1 0 0 1 0 0] cm
q
[-1 0 0 -1 0 0] cm
q
[1 0 0 1 121.8 -66.27] cm
[-1 0 0 -1 0 0] cm
q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
121.8 -66.27 Td
/F23_0 8.966 Tf
(\0004\000U\000B\000S) 4 14.6415 Tj16
-23 TJm
(\000U\000$) 2 8.168 Tj16
19 TJm
(\000Z) 1 4.223 Tj16
10 TJm
(\000D\000M\000F) 3 10.6247 Tj16
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
24.09 -110.89 Td
/F23_0 9.963 Tf
(\000') 1 4.852 Tj16
26 TJm
(\000J\000H\000V\000S) 4 16.6482 Tj16
10 TJm
(\000F) 1 4.9915 Tj16
-211 TJm
(\000\022\000\033) 2 7.1734 Tj16
-283 TJm
(\000&\000Y\000B\000N\000Q\000M\000F) 7 35.6377 Tj16
-212 TJm
(\000P\000G) 2 8.3789 Tj16
-212 TJm
(\000B) 1 4.8022 Tj16
-212 TJm
(\000T\000F\000R\000V\000F\000O\000D) 7 35.0199 Tj16
5 TJm
(\000F) 1 4.9915 Tj16
-211 TJm
(\000X\000J\000U\000I) 4 18.4913 Tj16
-212 TJm
(\000Q\000B\000S) 3 13.729 Tj16
4 TJm
(\000B\000M\000M\000F\000M) 5 16.8474 Tj16
-211 TJm
(\000B\000D) 2 9.2656 Tj16
-13 TJm
(\000U\000J\000W\000J\000U\000J\000F\000T) 8 27.3185 Tj16
10 TJm
(\000\017) 1 2.0623 Tj16
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font UPOEQR+MyriadPro-Regular
%%EOF
